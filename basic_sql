Basic commands:


SELECT

select *from Table_Name;
  It is used to project name of all column of a table. * can be replaced by the name of the attribute which you want
to display. The result of the above command is stored in a table called result-set. 

select distinct Column_name from Table_Name;
  The above command is used to select distinct elements from the table. The duplicate values are removed by using
above command. 


WHERE 

  Where clause puts conditions on the values returned by the select statement.
select *from Table_Name where Column_Name = 'abc';
  The above statement prints only those columns where the column has the values 'abc'. Various operators which can 
be used with where clause are :
  1. = (Equal)
  2. <> (Not equal, in some versions it can be represented as !=)
  3. LIKE (Searching for a pattern)
  4. IN (Checks in range)
  5. BETWEEN (Checks from a value v1 to value v2)
  
  
ORDER BY 

  It is used to sort the column names. 
select *from Table_Name order by Column_Name;


INSERT INTO 
  It is used to insert values into the database table. It has two forms :
   1. insert into Table_Name values (val1, val2);
   2. insert into Table_Name (col1, col2) values (val1, val2);


UPDATE 

# While updating if where clause is omitted, all the rows will be updated.
  This is used to update value in a particular column in table.
update Table_Name set Col1 = Val1 where Col1 = val2;


DELETE 

  This is used to delete data from the table.
  
  
INJECTION

  This is one of the top web site vulnerabilities. Generally, we require user to enter a query in to a box as an 
id or something. Malicious users can take advantage of this situation by inserting queries which can modify the database
in some un-authenticated way. For instance, 

Username : 1 or 1=1
Now, on the back-end generally there is query like 
select *from Table_Name where user = 1 or 1=1;
As 1=1 is always correct the page will show all the data to the user. 
  There are many solutions to this problem. First is blacklisting of words which user can't enter. But this will lead
to unavailability of certain words which are required. So, the proper way to stop these SQL Injection attacks is usage
of parameters. 


SELECT TOP FEW ENTRIES

  This task can be accomplished by using rownum. ROWNUM is the number of the current row. So, for selecting top 10
rows from Oracle database.
select *
from Table_Name
where rownum <= 10;


LIKE 

  As described above this is used inside where clause. It is used for matching pattern. For eg.,

select *
from Table_Name
where Column_Name like 's%';

  The above command returns all records corresponding to rows which have starting of Column_Name with character s.
  
  
WILDCARDS 

  These are used to match characters or group of characters in LIKE statements.
  1. % - Matches zero or more characters.
  2. _ - Matches single character.
  3. [] - Matches character from character list specified.
  4. [^] or [!] - Matches anything which is not specified in the character list.
  
IN 
  This is used to select from a group of items in a where clause. Example, 
select *
from Table_Name
where Column_Name in ('a', 'b', 'c');


BETWEEN 

  This is used to select a range in where clause. It can be used to select date, text, or numbers. Example,
select *
from Table_Name
where Column_Name between a and b;
# Check for inclusivity, exclusivity of left and right values.


TO BE CONTINUED.......


